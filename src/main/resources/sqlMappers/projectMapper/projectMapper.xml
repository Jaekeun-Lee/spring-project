<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="projectMapper">

	<resultMap id="projectSelectMap" type="projectVO">
		<id		property="projectNo"	    		column="project_no"         		jdbcType="INTEGER"/>
		<result property="leaderId"    				column="user_id"      				jdbcType="VARCHAR"/>
		<result property="projectName" 				column="project_name"      			jdbcType="VARCHAR"/>
		<result property="progressClassification"   column="progress_Classification"    jdbcType="NUMERIC"/>
		<result property="projectCategory"    		column="project_category"      		jdbcType="NUMERIC"/>
		<result property="preStartDate"    			column="pre_start_date"      		jdbcType="DATE"/>
		<result property="prePeriod"    			column="pre_period"      			jdbcType="NUMERIC"/>
		<result property="regDate"    				column="reg_date"      				jdbcType="DATE"/>
		<result property="applicationDeadline"    	column="application_deadline"      	jdbcType="DATE"/>
		<result property="meetingMethod"    		column="meeting_method"      		jdbcType="NUMERIC"/>
		<result property="meetingLocation"    		column="meeting_location"      		jdbcType="VARCHAR"/>
		<result property="applicantQuestionA"    	column="applicant_question_a"      	jdbcType="VARCHAR"/>
		<result property="applicantQuestionB"    	column="applicant_question_b"      	jdbcType="VARCHAR"/>
		<result property="applicantQuestionC"    	column="applicant_question_c"      	jdbcType="VARCHAR"/>
		<result property="projectViewCnt"    		column="project_view_cnt"      		jdbcType="NUMERIC"/>
		<result property="projectStatus"    		column="project_status"      		jdbcType="NUMERIC"/>
		<result property="endProjectCnt"    		column="endProject_cnt"   			jdbcType="NUMERIC"/>
		<result property="projectDetail"    		column="project_detail"      		jdbcType="VARCHAR"/>
		<result property="endDate"    				column="end_date"      				jdbcType="DATE"/>
		<result property="recruitmentMemberCnt"    	column="recruitment_member_cnt"     jdbcType="NUMERIC"/>
		<result property="bookmarkCheck"			column="bookmarkCheck" 				jdbcType="NUMERIC"/>

		<!-- association -->
		<association property="applicantsCnt"		column="project_no"		select="getApplicantsCntByProjectNo"/>

		<!-- collection -->
		<collection property="teamMember" 			column="project_no" javaType="java.util.ArrayList" ofType="memberVO" select="getProjectMemberByProjectNo"/>
		<collection property="skillHashTag" 		column="project_no" select="getProjectHashTagByProjectNo"/>
		<collection property="projectReply" 		column="project_no" select="getProjectReplyByProjectNo"/>

	</resultMap>

	<resultMap id="getMyProjectByProjectNo" type="myProjectVO">
		<id			property="projectNo"	column="project_no"		jdbcType="NUMERIC"/>
		<result		property="projectName"	column="project_name"	jdbcType="VARCHAR"/>
		<collection property="todoList" 	column="project_no" 	select="getTodoListByProjectNo"/>
		<collection property="teamMember" 	column="project_no" 	select="getProjectMemberByProjectNo"/>
	</resultMap>




	<insert id="addProject" parameterType="projectVO">
		INSERT
		INTO PROJECT (
			PROJECT_NO,
			USER_ID,
			PROJECT_NAME,
			PROGRESS_CLASSIFICATION,
			PROJECT_CATEGORY,
			PRE_START_DATE,
			PRE_PERIOD,
			MEETING_METHOD,
			MEETING_LOCATION,
			APPLICATION_DEADLINE,
			PROJECT_DETAIL,
			REG_DATE,
			APPLICANT_QUESTION_A,
			APPLICANT_QUESTION_B,
			APPLICANT_QUESTION_C,
			RECRUITMENT_MEMBER_CNT
		)
		VALUES(seq_project_no.NEXTVAL,
		       #{leaderId},
		       #{projectName},
		       #{progressClassification},
		       #{projectCategory},
		       #{preStartDate},
		       #{prePeriod},
		       #{meetingMethod:VARCHAR},
		       #{meetingLocation},
		       #{applicationDeadline},
		       #{projectDetail},
		       SYSDATE,
		       #{applicantQuestionA:VARCHAR},
		       #{applicantQuestionB:VARCHAR},
		       #{applicantQuestionC:VARCHAR},
		       #{recruitmentMemberCnt})
	</insert>

	<select id="getProjectNo" parameterType="java.lang.String" resultType="hashmap">
		SELECT PROJECT_NO,
		       USER_ID
		FROM   PROJECT
		WHERE  USER_ID = #{leaderId} AND PROJECT_STATUS = 1
	</select>

	<update id="updateMemberProjectNo" parameterType="hashMap">
		UPDATE MEMBER
		SET PROJECT_NO = #{PROJECT_NO}
		WHERE USER_ID = #{USER_ID}
	</update>


	<select id="getProject"  parameterType="getProjectDTO" resultMap="projectSelectMap">
		SELECT P.*, COUNT(*) OVER () AS bookmarkCheck
		FROM PROJECT P, BOOKMARK B
		WHERE  P.PROJECT_NO(+) = B.PROJECT_NO AND P.PROJECT_NO=#{projectNo} AND B.USER_ID=#{userId}
	</select>


	<insert id="addProjectReply" parameterType="projectReplyDTO">
		INSERT
		INTO REPLY(REPLY_NO,
		           PROJECT_NO,
		           USER_ID,
		           REPLY_CONTENT,
		           REG_DATE)
		VALUES (SEQ_REPLY_NO.NEXTVAL,
		        #{projectNo},
		        #{replyUserId},
		        #{replyContent},
		        SYSDATE)
	</insert>


	<select id="getMyProject" parameterType="int" resultMap="getMyProjectByProjectNo">
		SELECT PROJECT_NO,
		       PROJECT_NAME
		FROM   PROJECT
		WHERE  PROJECT_NO = #{projectNo}
	</select>


	<insert id="addTodo" parameterType="todoVO">
		INSERT INTO TODO (TODO_NO,
		                  PROJECT_NO,
		                  USER_ID,
		                  TODO_CONTENT )
		VALUES (SEQ_TODO_NO.NEXTVAL,
		        #{projectNO},
		        #{userId},
		        #{todoContent})
	</insert>


	<insert id="addBookmark" parameterType="projectBookmarkDTO">
		INSERT INTO BOOKMARK(BOOKMARK_NO,
		                     USER_ID,
		                     PROJECT_NO)
		VALUES (SEQ_BOOKMARK_NO.NEXTVAL, #{userId} , #{projectNo})
	</insert>
	

	<delete id="deleteBookmark" parameterType="projectBookmarkDTO">
		DELETE
		FROM BOOKMARK
		WHERE BOOKMARK_NO = #{bookmarkNo}
	</delete>


	<select id="getProjectList" parameterType="searchVO" resultMap="projectSelectMap">
		SELECT *
		FROM ( SELECT ROW_NUMBER() OVER(ORDER BY
		<choose>
			<when test="sort == 1">P.REG_DATE DESC</when>
			<when test="sort == 2">P.APPLICATION_DEADLINE DESC</when>
			<otherwise>P.PROJECT_NO DESC</otherwise>
		</choose>
		) RN, P.*, B.BOOKMARK_NO
		FROM PROJECT P, ( SELECT BOOKMARK_NO
						  FROM BOOKMARK
						  WHERE USER_ID = #{userId:VARCHAR} ) B
		<if test="searchConditionC != null and searchConditionC == 2">
			,(SELECT HASHTAG, SH.PROJECT_NO PROJECT_NO
			  FROM HASHTAG HA, SKILL_HASHTAG SH
			  WHERE HA.HASHTAG_NO = SH.HASHTAG_NO) H
		</if>
		<where>
			P.PROJECT_NO = B.BOOKMARK_NO(+)

			<if test="searchConditionA != null">
				<if test="searchConditionA == 1">AND P.PROJECT_CATEGORY = 1 </if>
				<if test="searchConditionA == 2">AND P.PROJECT_CATEGORY = 2 </if>
				<if test="searchConditionA == 3">AND P.PROJECT_CATEGORY = 3 </if>
			</if>
			<if test="searchConditionB != null">
				<if test="searchConditionB == 1 ">AND P.MEETING_METHOD = 1</if>
				<if test="searchConditionB == 2 ">AND P.MEETING_METHOD = 2</if>
			</if>
			<if test="searchConditionC != null">
				<if test="searchConditionC == 1">AND P.PROJECT_NAME LIKE '%'||#{searchKeyword}||'%' </if>
				<if test="searchConditionC == 2">AND P.PROJECT_NO = H.PROJECT_NO AND H.HASHTAG = #{searchKeyword} </if>
				<if test="searchConditionC == 3">AND P.PROJECT_DETAIL LIKE '%'||#{searchKeyword}||'%' </if>
			</if>
			<if test="searchConditionD != null">
				<if test="searchConditionD == 1">AND P.PROJECT_STATUS = 1</if>
				<if test="searchConditionD == 2">AND P.PROJECT_STATUS = 2</if>
				<if test="searchConditionD == 3">AND P.PROJECT_STATUS = 3</if>
			</if>
			)
		</where>

		<where>
			RN BETWEEN #{startRowNum} AND #{endRowNum}

		</where>

	</select>


	<!--<select  id= "getAppliedProjectList"  parameterType="com.example.demo.common.vo.SearchVO"	resultMap="projectSelectMap">
		SELECT *
		FROM ( SELECT inner_table.*, ROWNUM AS row_seq
				FROM (
					SELECT
					p.project_name,
					p.project_detail,
					p.reg_date,
					p.user_id,
					p.application_deadline,
					p.recruitment_member_cnt
					FROM
					applicant a, project p
					WHERE
					a.project_no = p.project_no AND
					a.user_id = #{userId}
					<if test="searchConditionB != null">
						<if test = "searchConditionB == 1" >
							AND a.applicant_status = 1
						</if>
						<if test = "searchConditionB == 2" >
							AND a.applicant_status = 2
						</if>
						<if test = "searchConditionB == 3" >
							AND a.applicant_status = 3
							AND a.applicant_status = 4
						</if>
					</if>
					ORDER BY a.APPLICANT_NO
				) inner_table
				WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}
	</select>-->





	<select id = "getApplicantsCntByProjectNo" 	resultType="int">
		SELECT COUNT(*)
		FROM   APPLICANT
		WHERE  PROJECT_NO = #{project_no}
	</select>

	<select id = "getProjectMemberByProjectNo" 	resultType="memberVO">
		SELECT USER_ID as userId, PROFILE_IMAGE as profileImg
		FROM   MEMBER
		WHERE  PROJECT_NO = #{projectNo}
	</select>

	<select id = "getProjectHashTagByProjectNo" resultType="java.lang.String">
		SELECT HASHTAG
		FROM   SKILL_HASHTAG sh, HASHTAG h
		WHERE  sh.HASHTAG_NO = h.HASHTAG_NO AND sh.PROJECT_NO = #{project_no}
	</select>

	<select id = "getProjectReplyByProjectNo" 	resultType="replyVO">
		SELECT REPLY_NO,
			   USER_ID,
			   REPLY_CONTENT,
			   REG_DATE
		FROM   REPLY
		WHERE  PROJECT_NO = #{projectNo}
	</select>

	<select id = "getTodoListByProjectNo" 		resultType="todoVO">
		SELECT TODO_NO,
		       PROJECT_NO,
		       USER_ID,
		       TODO_CONTENT,
		       TODO_STATUS
		FROM   TODO
		WHERE  PROJECT_NO = #{projectNo}
	</select>

</mapper>