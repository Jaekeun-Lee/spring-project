<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">
    <select id="insertOne" resultType="com.example.demo.member.dto.MemberDTO$GetListReqDTO">
        SELECT PRODUCT as product,
               VERSION as version
        FROM SYS.PRODUCT_COMPONENT_VERSION
    </select>

    <sql id="from_select">
        SELECT USER_ID         as userId,
               NAME            as name,
               PASSWORD        as password,
               EMAIL           as email,
               ROLE            as role,
               MEMBER_STATUS   as status,
               REPORT_CNT      as reportCnt,
               LAST_LOGIN_DATE as lastLoginDate,
               REG_DATE        as regDate
        FROM MEMBER
    </sql>

    <insert id="addMember" parameterType="com.example.demo.member.vo.MemberVO">
        INSERT INTO MEMBER(USER_ID,
                           EMAIL,
                           PASSWORD,
                           NAME,
                           ROLE,
                           MEMBER_STATUS,
                           GRADE,
                           REG_DATE)
        VALUES (#{userId},
                #{email},
                #{password},
                #{name},
                #{role},
                #{status},
                #{grade},
                CURRENT_DATE)
    </insert>

    <select id="selectMember" parameterType="java.lang.String" resultType="com.example.demo.member.vo.MemberVO">
        <!-- member.selectMember -->
        <include refid="from_select"/>
        WHERE USER_ID = #{userId}
    </select>

    <select id="selectMemberList" parameterType="com.example.demo.member.vo.MemberVO"
            resultType="com.example.demo.member.vo.MemberVO">
        <include refid="from_select"/>
        <if test="userId != null and userId != ''">
            WHERE USER_ID = #{userId}
        </if>
        ORDER BY REG_DATE
    </select>

    <select id="selectReportMemberList" parameterType="com.example.demo.member.vo.MemberVO"
            resultType="com.example.demo.member.vo.MemberVO">
        <include refid="from_select"/>
        <if test="userId != null and userId != ''">
            WHERE USER_ID = #{userId}
            AND REPORT_CNT BETWEEN 1 AND 6
        </if>
        ORDER BY REG_DATE
    </select>

    <select id="selectDormantMemberList" parameterType="com.example.demo.member.vo.MemberVO"
            resultType="com.example.demo.member.vo.MemberVO">
        <include refid="from_select"/>
        <if test="userId != null and userId != ''">
            WHERE USER_ID = #{userId}
            AND STATUS = DORMANT
        </if>
        ORDER BY REG_DATE
    </select>

    <select id="selectBlackMemberList" parameterType="com.example.demo.member.vo.MemberVO"
            resultType="com.example.demo.member.vo.MemberVO">
        <include refid="from_select"/>
        <if test="userId != null and userId != ''">
            WHERE USER_ID = #{userId}
            AND STATUS = BLACK
        </if>
        ORDER BY REG_DATE
    </select>

    <!--회원탈퇴-->
    <delete id="deleteMember" parameterType="com.example.demo.member.vo.MemberVO">
        DELETE
        FROM MEMBER
        WHERE USER_ID = #{userId}
          AND PASSSWORD = #{password}
    </delete>

    <!--password fail 횟수 증가-->
    <update id="failCntUpdate" parameterType="String">
        UPDATE MEMBER
        SET FAIL_CNT = isnull(failCnt, 0) + 1
        WHERE USER_ID = #{userId}
    </update>

    <select id="selectUserById" parameterType="com.example.demo.member.vo.MemberVO">
        <![CDATA[
        SELECT *
        FROM MEMBER
        WHERE USER_ID = #{userId}
        ]]>
    </select>

    <update id="updateFailureCount">
        <![CDATA[
        UPDATE
            MEMBER
        SET FAil_CNT = FAILURE_CNT + 1
        WHERE USER_ID = #{userId}
        ]]>
    </update>

    <select id="checkFailureCount" resultType="Integer">
        <![CDATA[
        SELECT FAILURE_CNT
        FROM MEMBER
        WHERE USER_ID = #{userId}
        ]]>
    </select>

    <select id="selectFindUserByPassword" resultType="memberVO" parameterType="map">
        SELECT *
        FROM MEMBER
        WHERE NAME = #{username}
          AND EMAIL = #{email}
    </select>
</mapper>
